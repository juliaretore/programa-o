package br.edu.ifcvideira.DAOs;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import br.edu.ifcvideira.beans.Produto;
import br.edu.ifcvideira.utils.Conexao;

public class ProdutoDao {
	

	public void CadastrarProduto(Produto p) throws SQLException, Exception{
		try{
			String sql = "INSERT INTO produtos (id_produto, nome_produto, valor_unitario_produto) VALUES (?,?,?)";
			java.sql.PreparedStatement sqlPrep = Conexao.conectar().prepareStatement(sql);
			int contador = 1;
			sqlPrep.setInt(contador++, p.getidproduto());
			sqlPrep.setString(contador++, p.getnomeproduto());
			sqlPrep.setDouble(contador++, p.getvlrunitarioproduto());
			sqlPrep.execute();
			
		} catch(SQLException e) {
			JOptionPane.showMessageDialog(null,e.getMessage());
			
		} catch(Exception e) {
			JOptionPane.showMessageDialog(null,e.getMessage());
		}
	}
	
	
		
		public void AlterarProduto(Produto p) throws Exception {
			try{
				String sql = "UPDATE produtos SET nome_produto=?, valor_unitario_produto=? WHERE id_produto=?";
				PreparedStatement sqlPrep = Conexao.conectar().prepareStatement(sql);
				int contador = 1;
				sqlPrep.setString(contador++, p.getnomeproduto());
				sqlPrep.setDouble(contador++, p.getvlrunitarioproduto());
				sqlPrep.setInt(contador++, p.getidproduto());
				sqlPrep.execute();
			}catch(Exception e) {
				JOptionPane.showMessageDialog(null, e.getMessage());
			}
		}
		
		
		
		
		
		
		public void deletarProduto(Produto p) throws Exception{
			try{
				String sql = "DELETE FROM produtos WHERE id_produto=? ";
				PreparedStatement sqlPrep = (PreparedStatement) Conexao.conectar().prepareStatement(sql);
				sqlPrep.setInt(1, p.getidproduto());
				sqlPrep.execute();
			} catch (SQLException e){
				JOptionPane.showMessageDialog(null, e.getMessage());
			}
		}
		
		
		
		public List<Object> buscarTodos() throws SQLException, Exception{
			List<Object> produto = new ArrayList<Object>();
			try {
				String sql = "SELECT * FROM produtos";
				java.sql.Statement state = Conexao.conectar().createStatement();
				ResultSet rs = state.executeQuery(sql);
				
				while (rs.next())
				{
					Object[] linha = {rs.getString(1), rs.getString(2), rs.getString(3)};
					produto.add(linha);
				}
				state.close();
				
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e.getMessage());
			}
			return produto;
		}
		
		public int RetornarProximoCodigoProduto() throws Exception {
			try{
				String sql ="SELECT MAX(id_produto)+1 AS codigo FROM produtos ";
				PreparedStatement sqlPrep = Conexao.conectar().prepareStatement(sql);
				ResultSet rs = sqlPrep.executeQuery();
				if (rs.next()){
					return rs.getInt("codigo");
				}else{
					return 1;
				}
			} catch(Exception e) {
				JOptionPane.showMessageDialog(null, e.getMessage());
				return 1;
			}
		
		
		
		
	}
		
		
		
		
		
		public List <String> DadosProdutoAquisicao(String nome, Produto p) throws SQLException, Exception{
			ArrayList<String> produto = new ArrayList<String>();
			try {
				String sql = "SELECT valor_unitario_produto, id_produto FROM produtos WHERE nome_produto='"+nome+"'";
				java.sql.Statement state = Conexao.conectar().createStatement();
				ResultSet rs = state.executeQuery(sql);
				
				while (rs.next())
				{
					produto.add(rs.getString(1));
					produto.add(rs.getString(2));
				}
				state.close();
				
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e.getMessage());
			}
			Arrays.toString(produto.toArray());
			return produto;
		}
}


