package br.edu.ifcvideira.controllers.views;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import br.edu.ifcvideira.DAOs.ProdutoDao;
import br.edu.ifcvideira.DAOs.VendaDao;
import br.edu.ifcvideira.beans.Clientes;
import br.edu.ifcvideira.beans.Produtos;
import br.edu.ifcvideira.beans.Usuarios;
import br.edu.ifcvideira.beans.Vendas;

import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class VendaView extends JFrame {

	private JPanel contentPane;
    public static JTextField textFieldIdCliente;
	private static final long serialVersionUID = 1L;
	private JTextField textPNome;
	private JTextField textPCodigo;
	
    List<Object> aquisicao = new ArrayList<Object>();
    Vendas v = new Vendas();
    VendaDao vDao = new VendaDao();
	ProdutoDao pDao = new ProdutoDao();
    Produtos p = new Produtos();
	Usuarios u = new Usuarios();
	Clientes c = new Clientes();
	
	java.sql.Timestamp time = new java.sql.Timestamp(System.currentTimeMillis());
	private JTextField textCodigo;
	public static JTextField textFieldNomeCliente;
	private JTextField textFieldSituacao;
	private JTable table;
	private JTable table_1;
	private List<Object> produto = new ArrayList<Object>();
	private JTextField textFieldValorTotal;
	double valortotal =0;


	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VendaView frame = new VendaView();
					frame.setVisible(true);
					frame.setLocationRelativeTo(null);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}


	public VendaView() {
		addWindowFocusListener(new WindowFocusListener() {
			public void windowGainedFocus(WindowEvent arg0) {

			}
			public void windowLostFocus(WindowEvent arg0) {
			}
		});
		addWindowListener(new WindowAdapter() {
			public void windowOpened(WindowEvent arg0) {
				atualizarTabela();
				limpar();
			}
			
		});
		setTitle("Vendas:");
		setResizable(false);
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 10, 500, 700);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		
		JLabel lblFornecedor = new JLabel("Cliente:");
		lblFornecedor.setHorizontalAlignment(SwingConstants.RIGHT);
		lblFornecedor.setBounds(10, 72, 59, 20);
		contentPane.add(lblFornecedor);

		JLabel lblTipo = new JLabel("Tipo:");
		lblTipo.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTipo.setBounds(-22, 10, 91, 20);
		contentPane.add(lblTipo);

		JLabel lblInserirProdutos = new JLabel("Inserir produtos");
		lblInserirProdutos.setHorizontalAlignment(SwingConstants.RIGHT);
		lblInserirProdutos.setBounds(157, 133, 98, 20);
		contentPane.add(lblInserirProdutos);

		JButton sair = new JButton("Sair");
		sair.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sair();
			}
		});
		sair.setBackground(SystemColor.controlHighlight);
		sair.setBounds(138, 467, 117, 20);
		contentPane.add(sair);

		JLabel lblCodigo = new JLabel("Codigo:");
		lblCodigo.setHorizontalAlignment(SwingConstants.RIGHT);
		lblCodigo.setBounds(10, 101, 59, 20);
		contentPane.add(lblCodigo);

		textCodigo = new JTextField();
		textCodigo.setEditable(false);
		textCodigo.setColumns(10);
		textCodigo.setBounds(79, 101, 36, 20);
		contentPane.add(textCodigo);

		JSeparator separator_1 = new JSeparator();
		separator_1.setForeground(Color.LIGHT_GRAY);
		separator_1.setBounds(20, 133, 384, 2);
		contentPane.add(separator_1);

		JLabel label_6 = new JLabel("C\u00F3digo:");
		label_6.setBounds(10, 174, 46, 20);
		contentPane.add(label_6);
		label_6.setHorizontalAlignment(SwingConstants.RIGHT);

		textPCodigo = new JTextField();
		textPCodigo.setBounds(79, 174, 108, 20);
		contentPane.add(textPCodigo);
		textPCodigo.addCaretListener(new CaretListener() {
			public void caretUpdate(CaretEvent e) {
				

						TableRowSorter<TableModel> filtro = null;  
						DefaultTableModel model = (DefaultTableModel) table.getModel();  
						filtro = new TableRowSorter<TableModel>(model);  
						table.setRowSorter(filtro);
						
						if (textPCodigo.getText().length() == 0) {
							filtro.setRowFilter(null);
						} else {  
							filtro.setRowFilter(RowFilter.regexFilter(textPCodigo.getText(), 0));  
						}  
					}
				
			
		});
		textPCodigo.setColumns(10);

		textPNome = new JTextField();
		textPNome.setBounds(79, 205, 108, 20);
		contentPane.add(textPNome);
		textPNome.addCaretListener(new CaretListener() {
			public void caretUpdate(CaretEvent arg0) {

				TableRowSorter<TableModel> filtro = null;  
				DefaultTableModel model = (DefaultTableModel) table.getModel();  
				filtro = new TableRowSorter<TableModel>(model);  
				table.setRowSorter(filtro); 
				
				if (textPNome.getText().length() == 0) {
					filtro.setRowFilter(null);
				} else {  
					filtro.setRowFilter(RowFilter.regexFilter("(?i)" + textPNome.getText(), 1));  
				}  

			}
		});
		textPNome.setColumns(10);

		JLabel label_7 = new JLabel("Nome:");
		label_7.setBounds(10, 205, 46, 20);
		contentPane.add(label_7);
		label_7.setHorizontalAlignment(SwingConstants.RIGHT);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(11, 236, 208, 157);
		contentPane.add(scrollPane);
		
		table = new JTable();
		scrollPane.setViewportView(table);
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"C\u00F3digo", "Nome", "Valor Unit\u00E1rio"
			}
		));
		table.getColumnModel().getColumn(0).setPreferredWidth(41);
		table.getColumnModel().getColumn(1).setPreferredWidth(95);
		table.getColumnModel().getColumn(2).setPreferredWidth(60);
		
	
	
			JButton ProcurarCliente = new JButton("Procurar");
			ProcurarCliente.setEnabled(false);
			ProcurarCliente.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					
					ProcurarClientesView frame = new ProcurarClientesView();
					frame.setVisible(true);
					
				}
			});
			ProcurarCliente.setBounds(223, 72, 108, 20);
			contentPane.add(ProcurarCliente);
			
			textFieldIdCliente = new JTextField();
			textFieldIdCliente.setEditable(false);
			textFieldIdCliente.setBounds(79, 72, 20, 20);
			contentPane.add(textFieldIdCliente);
			textFieldIdCliente.setColumns(10);
			
			JLabel lblDescrio = new JLabel("Situa\u00E7\u00E3o:");
			lblDescrio.setBounds(20, 44, 79, 14);
			contentPane.add(lblDescrio);
			
			JComboBox<String> comboBoxTipo = new JComboBox<String>();
			comboBoxTipo.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					v.settipoVenda((String)comboBoxTipo.getSelectedItem());
					if (comboBoxTipo.getSelectedItem().equals("À vista")){
						ProcurarCliente.setEnabled(false);
						textFieldSituacao.setText("Pago");
						v.settipoVenda((String)comboBoxTipo.getSelectedItem());
						v.setsituacaoVenda(textFieldSituacao.getText());
						textFieldIdCliente.setText("0");
						textFieldNomeCliente.setText("Compra à vista");
						
					}else{
						ProcurarCliente.setEnabled(true);
						textFieldSituacao.setText("Em aberto");
						v.settipoVenda((String)comboBoxTipo.getSelectedItem());
						v.setsituacaoVenda(textFieldSituacao.getText());				

					}
					
				}
			});
			comboBoxTipo.setModel(new DefaultComboBoxModel<String>(new String[] {"Selecione", "\u00C0 vista", "\u00C0 prazo"}));
			comboBoxTipo.setBounds(79, 10, 187, 20);
			contentPane.add(comboBoxTipo);
			
			JButton buttonIncluirProdutos = new JButton("Inlcuir Produtos");
			buttonIncluirProdutos.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {					
					if (table.getSelectedRow() != -1){ 
								List<Object> produtosv = new ArrayList<Object>();

								Object[]linha = { table.getValueAt(table.getSelectedRow(), 0), table.getValueAt(table.getSelectedRow(), 1),  table.getValueAt(table.getSelectedRow(), 2)};
								produtosv.add(linha);
								valortotal+=(Double.parseDouble((String) table.getValueAt(table.getSelectedRow(), 2)));
		
								DefaultTableModel model = (DefaultTableModel) table_1.getModel();
								for (int x=0; x!=produtosv.size(); x++){
									model.addRow((Object[]) produtosv.get(x));
									textFieldValorTotal.setText(""+valortotal);
								}
							} 
				
				}
			});
			buttonIncluirProdutos.setBackground(SystemColor.controlHighlight);
			buttonIncluirProdutos.setBounds(10, 424, 128, 21);
			contentPane.add(buttonIncluirProdutos);
			
			textFieldNomeCliente = new JTextField();
			textFieldNomeCliente.setEditable(false);
			textFieldNomeCliente.setColumns(10);
			textFieldNomeCliente.setBounds(96, 72, 117, 20);
			contentPane.add(textFieldNomeCliente);
			
			textFieldSituacao = new JTextField();
			textFieldSituacao.setEditable(false);
			textFieldSituacao.setBounds(79, 41, 86, 20);
			contentPane.add(textFieldSituacao);
			textFieldSituacao.setColumns(10);
			
			JLabel lblBuscar = new JLabel("Buscar:");
			lblBuscar.setBounds(101, 149, 46, 14);
			contentPane.add(lblBuscar);
			table.getColumnModel().getColumn(0).setPreferredWidth(41);
			table.getColumnModel().getColumn(1).setPreferredWidth(95);
			table.getColumnModel().getColumn(2).setPreferredWidth(60);
					
			JScrollPane scrollPane_1 = new JScrollPane();
			scrollPane_1.setBounds(226, 236, 193, 157);
			contentPane.add(scrollPane_1);
			
			table_1 = new JTable();
			table_1.setModel(new DefaultTableModel(
				new Object[][] {
				},
				new String[] {
					"C\u00F3digo", "Nome", "Valor Unit\u00E1rio"
				}
			));
			scrollPane_1.setViewportView(table_1);
			
			JButton button = new JButton("Cadastrar");
			button.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					// cadastrar venda
					u.setId(Usuarios.IdUsuario);	
					v.setidCodigoCliente(c);
					v.setidCodigoUsuario(u);
					c.setId(Integer.parseInt(textFieldIdCliente.getText()));
					v.setId_venda(Integer.parseInt(textCodigo.getText()));
					v.setdataVenda(time);	
														
					try {
						vDao.CadastrarVenda(v);
						//abre troco se for a vista e mensagem se for a prazo					
						if (textFieldSituacao.getText().contentEquals("Pago")) {
							for (int i=0; i<table_1.getModel().getRowCount(); i++) {
								p.setvalorUnitarioProduto((Double.parseDouble((String) table_1.getValueAt(i, 2))));
							}
							TrocoView frame = new TrocoView();
							TrocoView.textFieldVenda.setText(textCodigo.getText());
							TrocoView.textFieldValorTotal.setText(textFieldValorTotal.getText());
							frame.setVisible(true);
													
						}else {
							JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");
						}
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, e.getMessage());
					}
					
					// cadastra produtos venda
					for (int i=0; i<table_1.getModel().getRowCount(); i++) {
						v.setdataVenda(time);
						p.setidProduto((Integer.parseInt((String) table_1.getValueAt(i, 0))));
						p.setvalorUnitarioProduto((Double.parseDouble((String) table_1.getValueAt(i, 2))));
						v.setId_venda(Integer.parseInt(textCodigo.getText()));
						try {
							vDao.CadastrarProdutosVenda(p, v);
						} catch (Exception e) {
							JOptionPane.showMessageDialog(null, e.getMessage());
						}	
											
						// remove 1 da quantidade das aquisições quando o produto é vendido				
							try {
								vDao.DeletarAquisicao(p);
							} catch (SQLException e1) {
								JOptionPane.showMessageDialog(null, e1.getMessage());

							}
															
					atualizarTabela();
					}
					
					comboBoxTipo.setSelectedIndex(0);
					limpar();
					textFieldValorTotal.setText("0.00");
					
				}
			});
			button.setBounds(232, 433, 99, 23);
			contentPane.add(button);
			
			JButton button_1 = new JButton("Remover");
			button_1.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					if (table_1.getSelectedRow() != -1){
						((DefaultTableModel) table_1.getModel()).removeRow(table_1.getSelectedRow()); 
	
				}}
			});
			button_1.setBounds(341, 433, 89, 23);
			contentPane.add(button_1);
			
			textFieldValorTotal = new JTextField();
			textFieldValorTotal.setText("0.00");
			textFieldValorTotal.setEditable(false);
			textFieldValorTotal.setBounds(291, 402, 128, 20);
			contentPane.add(textFieldValorTotal);
			textFieldValorTotal.setColumns(10);
			
			JLabel lblValorTotal = new JLabel("Valor Total:");
			lblValorTotal.setBounds(223, 404, 79, 14);
			contentPane.add(lblValorTotal);
		
		
	}

public void sair() {

	dispose();

}

public void limpar() {
	((DefaultTableModel) table_1.getModel()).setNumRows(0); 
	table_1.updateUI();
	textFieldNomeCliente.setText(null);
	textFieldIdCliente.setText(null);
	textFieldSituacao.setText(null);
	try {
		textCodigo.setText(String.valueOf(vDao.RetornarProximoCodigoVenda()));
	} catch (Exception e) {
		JOptionPane.showMessageDialog(null, e.getMessage());
	}
}

public void atualizarTabela() {
	try {
	produto = vDao.TabelaProdutos();
	DefaultTableModel model = (DefaultTableModel) table.getModel();
	model.setNumRows(0);
for (int x=0; x!=produto.size(); x++)
	{
		model.addRow((Object[]) produto.get(x));
	}
} catch (Exception e) {
	JOptionPane.showMessageDialog(null, e.getMessage());
}}
}


		
		
		
		
		
		


		