package br.edu.ifcvideira.controllers.views;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import br.edu.ifcvideira.DAOs.VendaDao;
import br.edu.ifcvideira.beans.Cliente;
import br.edu.ifcvideira.beans.Produto;
import br.edu.ifcvideira.beans.Usuario;
import br.edu.ifcvideira.beans.Venda;

import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class VendasView extends JFrame {

	private JPanel contentPane;
    public static JTextField textFieldIdCliente;
	private static final long serialVersionUID = 1L;
	private JTextField textPNome;
	private JTextField textPCodigo;
	private JTable table;
	
    List<Object> aquisicao = new ArrayList<Object>();
    Venda v = new Venda();
    VendaDao vDao = new VendaDao();
    Produto p = new Produto();
	Usuario u = new Usuario();
	Cliente c = new Cliente();
	
	java.sql.Timestamp time = new java.sql.Timestamp(System.currentTimeMillis());
	private JTextField textCodigo;
	public static JTextField textFieldNomeCliente;

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VendasView frame = new VendasView();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}


	public VendasView() {
		addWindowFocusListener(new WindowFocusListener() {
			public void windowGainedFocus(WindowEvent arg0) {

			}
			public void windowLostFocus(WindowEvent arg0) {
			}
		});
		addWindowListener(new WindowAdapter() {
			public void windowOpened(WindowEvent arg0) {
				atualizarTabela();
				limpar();
			}
			
		});
		setTitle("Vendas:");
		setResizable(false);
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 10, 435, 520);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		
		JLabel lblFornecedor = new JLabel("Cliente:");
		lblFornecedor.setHorizontalAlignment(SwingConstants.RIGHT);
		lblFornecedor.setBounds(10, 72, 59, 20);
		contentPane.add(lblFornecedor);
		
		JButton cadastrar = new JButton("Cadastrar");
		cadastrar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {
					u.setId_usuario(Usuario.IdUsuario);
					
					
					v.setId_venda(Integer.parseInt(textCodigo.getText()));
					v.setData_venda(time);
					v.setId_codigo_usuario(u);
					
					JOptionPane.showMessageDialog(null, v.getData_venda());
					JOptionPane.showMessageDialog(null, v.getSituacao_venda());
					JOptionPane.showMessageDialog(null, v.getTipo_venda());
					JOptionPane.showMessageDialog(null, Usuario.getIdusuario());
					JOptionPane.showMessageDialog(null, v.getId_venda());
					JOptionPane.showMessageDialog(null, Cliente.getIdCliente());

					
					vDao.CadastrarVenda(v);


				} catch (Exception e) {
					JOptionPane.showMessageDialog(null, e.getMessage());
				}
				atualizarTabela();
				limpar();
			} 
		});
		cadastrar.setBackground(SystemColor.controlHighlight);
		cadastrar.setBounds(158, 101, 108, 21);
		contentPane.add(cadastrar);

		JLabel lblTipo = new JLabel("Tipo:");
		lblTipo.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTipo.setBounds(-22, 10, 91, 20);
		contentPane.add(lblTipo);

		JLabel label_5 = new JLabel("Busca:");
		label_5.setHorizontalAlignment(SwingConstants.RIGHT);
		label_5.setBounds(181, 133, 46, 20);
		contentPane.add(label_5);

		JLabel lblVendas = new JLabel("Vendas:");
		lblVendas.setBounds(10, 226, 156, 20);
		contentPane.add(lblVendas);

		JButton sair = new JButton("Sair");
		sair.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sair();
			}
		});
		sair.setBackground(SystemColor.controlHighlight);
		sair.setBounds(117, 445, 173, 39);
		contentPane.add(sair);

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 245, 415, 189);
		contentPane.add(scrollPane);

		table = new JTable();
		table.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent arg0) {
			}
		});
		scrollPane.setViewportView(table);
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"C\u00F3digo", "Usuario", "Tipo", "Situa\u00E7\u00E3o", "Cliente", "Data"
			}
		));
		table.getColumnModel().getColumn(0).setPreferredWidth(48);
		table.getColumnModel().getColumn(1).setPreferredWidth(52);
		table.getColumnModel().getColumn(2).setPreferredWidth(38);
		table.getColumnModel().getColumn(3).setPreferredWidth(59);
		table.getColumnModel().getColumn(4).setPreferredWidth(60);
		table.getColumnModel().getColumn(5).setPreferredWidth(60);

		JLabel lblCodigo = new JLabel("Codigo:");
		lblCodigo.setHorizontalAlignment(SwingConstants.RIGHT);
		lblCodigo.setBounds(10, 101, 59, 20);
		contentPane.add(lblCodigo);

		textCodigo = new JTextField();
		textCodigo.setEditable(false);
		textCodigo.setColumns(10);
		textCodigo.setBounds(79, 101, 36, 20);
		contentPane.add(textCodigo);

		JSeparator separator_1 = new JSeparator();
		separator_1.setForeground(Color.LIGHT_GRAY);
		separator_1.setBounds(20, 133, 384, 2);
		contentPane.add(separator_1);

		JLabel label_6 = new JLabel("C\u00F3digo:");
		label_6.setBounds(23, 164, 46, 20);
		contentPane.add(label_6);
		label_6.setHorizontalAlignment(SwingConstants.RIGHT);

		textPCodigo = new JTextField();
		textPCodigo.setBounds(79, 164, 315, 20);
		contentPane.add(textPCodigo);
		textPCodigo.addCaretListener(new CaretListener() {
			public void caretUpdate(CaretEvent e) {
				TableRowSorter<TableModel> filtro = null;
				DefaultTableModel model = (DefaultTableModel) table.getModel();
				filtro = new TableRowSorter<TableModel>(model);
				table.setRowSorter(filtro);

				if (textPCodigo.getText().length() == 0) {
					filtro.setRowFilter(null);
				} else {
					filtro.setRowFilter(RowFilter.regexFilter(textPCodigo.getText(), 0));
				}
			}
		});
		textPCodigo.setColumns(10);

		textPNome = new JTextField();
		textPNome.setBounds(79, 195, 315, 20);
		contentPane.add(textPNome);
		textPNome.addCaretListener(new CaretListener() {
			public void caretUpdate(CaretEvent arg0) {
				TableRowSorter<TableModel> filtro = null;
				DefaultTableModel model = (DefaultTableModel) table.getModel();
				filtro = new TableRowSorter<TableModel>(model);
				table.setRowSorter(filtro);

				if (textPNome.getText().length() == 0) {
					filtro.setRowFilter(null);
				} else {
					filtro.setRowFilter(RowFilter.regexFilter("(?i)" + textPNome.getText(), 1));
				}

			}
		});
		textPNome.setColumns(10);

		JLabel label_7 = new JLabel("Nome:");
		label_7.setBounds(20, 195, 46, 20);
		contentPane.add(label_7);
		label_7.setHorizontalAlignment(SwingConstants.RIGHT);

		JSeparator separator = new JSeparator();
		separator.setForeground(Color.LIGHT_GRAY);
		separator.setBounds(10, 226, 384, 2);
		contentPane.add(separator);
	
	
			JButton ProcurarCliente = new JButton("Procurar");
			ProcurarCliente.setEnabled(false);
			ProcurarCliente.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					
					ProcurarClienteView frame = new ProcurarClienteView();
					frame.setVisible(true);
					
				}
			});
			ProcurarCliente.setBounds(223, 72, 108, 20);
			contentPane.add(ProcurarCliente);
			
			textFieldIdCliente = new JTextField();
			textFieldIdCliente.setEditable(false);
			textFieldIdCliente.setBounds(79, 72, 20, 20);
			contentPane.add(textFieldIdCliente);
			textFieldIdCliente.setColumns(10);
			
			JComboBox comboBoxSituacao = new JComboBox();
			comboBoxSituacao.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					
					if(comboBoxSituacao.getSelectedItem().equals("Á prazo")) {
						ProcurarCliente.setEnabled(true);

					}		
//					c.setId_cliente(Cliente.IdCliente);
//					v.setId_codigo_cliente(c);
//					
					v.setSituacao_venda((String)comboBoxSituacao.getSelectedItem());
				}
			});
			comboBoxSituacao.setModel(new DefaultComboBoxModel(new String[] {"Selecione", "\u00C1 vista", "\u00C1 prazo"}));
			comboBoxSituacao.setBounds(79, 41, 187, 20);
			contentPane.add(comboBoxSituacao);
			
			JLabel lblDescrio = new JLabel("Situa\u00E7\u00E3o:");
			lblDescrio.setBounds(20, 44, 79, 14);
			contentPane.add(lblDescrio);
			
			JComboBox comboBoxTipo = new JComboBox();
			comboBoxTipo.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					v.setTipo_venda((String)comboBoxTipo.getSelectedItem());

				}
			});
			comboBoxTipo.setModel(new DefaultComboBoxModel(new String[] {"Selecione", "Lanche", "Almo\u00E7o", "Bebida"}));
			comboBoxTipo.setBounds(79, 10, 187, 20);
			contentPane.add(comboBoxTipo);
			
			JButton buttonIncluirProdutos = new JButton("Inlcuir Produtos");
			buttonIncluirProdutos.setBackground(SystemColor.controlHighlight);
			buttonIncluirProdutos.setBounds(276, 101, 128, 21);
			contentPane.add(buttonIncluirProdutos);
			
			textFieldNomeCliente = new JTextField();
			textFieldNomeCliente.setEditable(false);
			textFieldNomeCliente.setColumns(10);
			textFieldNomeCliente.setBounds(96, 72, 117, 20);
			contentPane.add(textFieldNomeCliente);
		
		
		
		
	}

public void sair() {
	MenuView frame = new MenuView();
	frame.setVisible(true);
	dispose();

}


public void limpar() {
	
	try {
		textCodigo.setText(String.valueOf(vDao.RetornarProximoCodigoVenda()));
	} catch (Exception e) {
		JOptionPane.showMessageDialog(null, e.getMessage());
	}
}

public void atualizarTabela() {
	try {
		aquisicao = vDao.buscarTodos();
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.setNumRows(0);
		for (int x = 0; x != aquisicao.size(); x++) {
			model.addRow((Object[]) aquisicao.get(x));
		}
	} catch (Exception e) {
		JOptionPane.showMessageDialog(null, e.getMessage());
	}
}
}


		
		
		
		
		
		


		